@page "/joinserver/{serverId}"
@using System.Text.Json
@using System.Text.Json.Serialization
@using Services
@using System.Net.Http.Headers
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject ServerService serverService

@if (loading)
{
    <div>LOADING...</div>
}
else
{
    if (success)
    {
        <div>SUCCESS</div>
    }
    else
    {
        <div>NOT SUCCESS</div>
    }
}


@code {

    [Parameter]
    public string serverId { get; set; }

    bool loading = true;
    bool success = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        string token = await JSRuntime.InvokeAsync<string>("getTokenFromStorage");
        var requestMessage = new HttpRequestMessage()
        {
            Method = new HttpMethod("POST"),
            RequestUri = new Uri("https://localhost:44314/api/server/joinserver?serverid=" + serverId)


        };

        Http.DefaultRequestHeaders.Authorization =
    new AuthenticationHeaderValue("Bearer", token);
        //requestMessage.Content.Headers.ContentType =
        //    new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");


        var response = await Http.SendAsync(requestMessage);
        var responseStatusCode = response.StatusCode;
        var responseBody = await response.Content.ReadAsStringAsync();
        if (responseStatusCode == System.Net.HttpStatusCode.OK)
        {
            loading = false;
            success = true;
        }
        else
        {
            loading = false;
            success = false;
        }
        StateHasChanged();
    }

}
